{"version":3,"sources":["pages/bikes.js","assets/biking.mp4","components/FadeInSection.js","pages/home.js","pages/map.js","pages/weather.js","components/NavigationBar.js","components/Routing.js","components/LeafletMap.js","App.js","serviceWorker.js","index.js"],"names":["Bikes","useState","bike","setBike","newFilter","setNewFilter","useEffect","fetch","then","res","json","network","stations","BikeItem","bikes","Table","striped","bordered","hover","variant","filter","bikeName","name","toLowerCase","includes","map","key","id","free_bikes","empty_slots","ProgressBar","now","max","className","style","display","justifyContent","FormControl","type","placeholder","onChange","event","target","value","console","log","Button","FadeInSection","props","React","isVisible","setVisible","domRef","useRef","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","ref","children","Home","autoPlay","muted","loop","src","video","textDecoration","color","fontSize","offset","href","rel","aria-hidden","api","Mapper","activeBike","setActiveBike","weather","setWeather","Map","center","zoom","TileLayer","url","attribution","stop","Marker","position","latitude","longitude","onclick","Popup","onClose","Math","round","main","temp","Weather","query","setQuery","apiError","setapiError","search","evt","result","message","catch","err","handleFilterChange","from","opacity","to","config","duration","onKeyPress","sys","country","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","NavigationBar","expanded","setExpanded","Navbar","expand","fixed","Brand","Toggle","area-controls","onClick","Collapse","Nav","Link","Routing","this","L","control","waypoints","latLng","addTo","leafletElement","getPlan","MapLayer","withLeaflet","MapComponent","saveMap","setState","isMapInit","state","lat","lng","Component","App","exact","path","component","LeafletMap","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.06e54f88.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport { FormControl } from 'react-bootstrap'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n//import FadeInSection from '../components/FadeInSection'\n\nexport const Bikes = () => {\n  const [bike, setBike] = useState([])\n  const [newFilter, setNewFilter] = useState('')\n\n  useEffect(() => {\n    fetch('https://api.citybik.es/v2/networks/citybikes-helsinki')\n      .then((res) => res.json())\n      .then((res) => setBike(res.network.stations))\n  }, [])\n\n  // Mapping through the bikelist got from the API and printing them correctly\n  const BikeItem = ({ bikes }) => {\n    const mapBikes = () =>\n      bikes\n        .filter((bikeName) =>\n          bikeName.name.toLowerCase().includes(newFilter.toLowerCase())\n        )\n        .map((bike) => (\n          <tr key={bike.id}>\n            <td>{bike.name}</td>\n            <td>\n              {bike.free_bikes} / {bike.free_bikes + bike.empty_slots}\n              <ProgressBar\n                now={bike.free_bikes}\n                max={bike.free_bikes + bike.empty_slots}\n              />\n            </td>\n          </tr>\n        ))\n    return (\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>Bike stations by name: </th>\n            <th>Bikes available: </th>\n          </tr>\n        </thead>\n        <tbody>{mapBikes()}</tbody>\n      </Table>\n    )\n  }\n\n  // Handle user input in search field\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n    console.log(event.target.value)\n  }\n\n  return (\n    <div className=\"searcher\">\n      <h1>Helsinki Citybikes</h1>\n      <div\n        className=\"search-box\"\n        style={{ display: 'flex', justifyContent: 'center' }}\n      >\n        <FormControl\n          type=\"text\"\n          placeholder=\"Search\"\n          onChange={handleFilterChange}\n          className=\" mr-sm-2\"\n        />\n        <Button type=\"submit\" variant=\"dark\" className=\"search-bar-button\">\n          Search\n        </Button>\n      </div>\n      <BikeItem bikes={bike} />\n    </div>\n  )\n}\n\nexport default Bikes\n","export default __webpack_public_path__ + \"static/media/biking.ed3ae535.mp4\";","import React from 'react'\n\nexport const FadeInSection = (props) => {\n  const [isVisible, setVisible] = React.useState(false)\n  const domRef = React.useRef()\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(entry.isIntersecting)\n        }\n      })\n    })\n    observer.observe(domRef.current)\n    //return () => observer.unobserve(domRef.current)\n  }, [])\n  return (\n    <div\n      className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n      ref={domRef}\n    >\n      {props.children}\n    </div>\n  )\n}\nexport default FadeInSection\n","import React from 'react'\nimport AnchorLink from 'react-anchor-link-smooth-scroll'\nimport Bikes from './bikes'\nimport video from '../assets/biking.mp4'\nimport FadeInSection from '../components/FadeInSection'\n\nexport const Home = () => {\n  return (\n    <div className=\"home\">\n      <section className=\"showcase\">\n        <div className=\"video-container\">\n          <video autoPlay=\"autoplay\" muted loop=\"loop\" className=\"myVideo\">\n            <source className=\"myVideo\" src={video} type=\"video/mp4\" />\n          </video>\n        </div>\n        <div className=\"video-content\">\n          <h1>Welcome to Bikester</h1>\n          <p>\n            This is a website created for you to stay updated on where all the\n            Alepa bikes are located and how many there are.\n            <br />\n            Our goal is to let everyone access this info from anywhere, anytime\n            for free.\n          </p>\n          <AnchorLink\n            className=\"btn\"\n            style={{\n              textDecoration: 'none',\n              color: 'black',\n              fontSize: 'smaller',\n            }}\n            offset={() => 90}\n            href=\"#bikes\"\n          >\n            Start Here\n          </AnchorLink>\n        </div>\n      </section>\n      <section id=\"bikes\">\n        <FadeInSection>\n          <Bikes />\n        </FadeInSection>\n        <br />\n      </section>\n      <section id=\"about\">\n        <h1 id=\"about\">About</h1>\n        <p>\n          This is a website created for you to stay updated on what's happening\n          around the world. Our goal is to let everyone access news from\n          anywhere anytime for free. Hope you enjoy your experience.\n        </p>\n        <br />\n        <br />\n        <h3>Follow Me On Social Media</h3>\n\n        <div className=\"social\">\n          <a\n            href=\"https://github.com/benjambo\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-github fa-3x\"></i>\n          </a>\n          <a\n            href=\"https://linkedin.com/in/benschelling\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-linkedin fa-3x\"></i>\n          </a>\n          <a\n            target=\"_blank\"\n            href=\"https://instagram.com/benjaminjoshin\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-instagram fa-3x\" aria-hidden=\"true\" />\n          </a>\n          <a\n            target=\"_blank\"\n            href=\"https://facebook.com/beni.schelling\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-facebook-square fa-3x\" aria-hidden=\"true\" />\n          </a>\n        </div>\n      </section>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\n\nconst api = {\n  key: 'b8b339cb458fb8bc4985ef3cc4e552a3',\n  base: 'https://api.openweathermap.org/data/2.5/',\n}\n\nexport const Mapper = () => {\n  const [bike, setBike] = useState([])\n  const [activeBike, setActiveBike] = useState(null)\n  const [weather, setWeather] = useState({})\n\n  useEffect(() => {\n    fetch('https://api.citybik.es/v2/networks/citybikes-helsinki')\n      .then((res) => res.json())\n      .then((res) => setBike(res.network.stations))\n    fetch(`${api.base}weather?q=helsinki&units=metric&APPID=${api.key}`)\n      .then((res) => res.json())\n      .then((res) => setWeather(res))\n  }, [])\n\n  return (\n    <div className=\"pages\">\n      <div className=\"map-container\">\n        <Map center={[60.1733244, 24.9410248]} zoom={13}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n          {bike.map((stop) => (\n            <Marker\n              key={stop.id}\n              position={[stop.latitude, stop.longitude]}\n              onclick={() => {\n                setActiveBike(stop)\n              }}\n            />\n          ))}\n\n          {activeBike && (\n            <Popup\n              key={activeBike.id}\n              position={[activeBike.latitude, activeBike.longitude]}\n              onClose={() => {\n                setActiveBike(null)\n              }}\n            >\n              <div>\n                <h3>{activeBike.name}</h3>\n                <p>Bikes available: {activeBike.free_bikes}</p>\n                <p>Empty slots left: {activeBike.empty_slots}</p>\n                <div>\n                  <p className=\"temp\">\n                    Weather: {Math.round(weather.main.temp)}°C{' '}\n                    {weather.weather[0].main}\n                  </p>\n                </div>\n              </div>\n            </Popup>\n          )}\n        </Map>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Spring } from 'react-spring/renderprops'\n\nconst api = {\n  key: 'b8b339cb458fb8bc4985ef3cc4e552a3',\n  base: 'https://api.openweathermap.org/data/2.5/',\n}\n\nexport const Weather = () => {\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState({})\n  const [apiError, setapiError] = useState('')\n\n  const search = (evt) => {\n    if (evt.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result)\n          setQuery('')\n          setapiError(result.message)\n        })\n        .catch((err) => {\n          console.log(err.message)\n        })\n    }\n  }\n\n  // Formating date\n  const dateFormat = () => {\n    let date = new Intl.DateTimeFormat('en-GB', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: '2-digit',\n      hour: 'numeric',\n      minute: 'numeric',\n    }).format()\n    return date\n  }\n\n  // Handle user input in search field\n  const handleFilterChange = (event) => {\n    setQuery(event.target.value)\n    console.log(event.target.value)\n  }\n\n  return (\n    <Spring\n      from={{ opacity: 0 }}\n      to={{ opacity: 1 }}\n      config={{ duration: 800 }}\n    >\n      {(props) => (\n        <div\n          style={props}\n          className={\n            typeof weather.main != 'undefined'\n              ? weather.main.temp > 16\n                ? 'weather warm'\n                : 'weather cold'\n              : 'weather'\n          }\n        >\n          <main>\n            <div className=\"search-box\">\n              <input\n                type=\"text\"\n                className=\"search-bar\"\n                placeholder=\"Search...\"\n                onChange={handleFilterChange}\n                value={query}\n                onKeyPress={search}\n              />\n            </div>\n            {typeof weather.main != 'undefined' ? (\n              <div>\n                <div className=\"location-box\">\n                  <div className=\"location\">\n                    {weather.name}, {weather.sys.country}\n                  </div>\n                  <div className=\"date\">{dateFormat()}</div>\n                </div>\n                <div className=\"weather-box\">\n                  <div className=\"temp\"> {Math.round(weather.main.temp)}°c</div>\n                  <div className=\"weather-description\">\n                    {weather.weather[0].main}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"weather-empty\">\n                <p>Search for Weather by City</p>\n                <p>{apiError}</p>\n              </div>\n            )}\n          </main>\n        </div>\n      )}\n    </Spring>\n  )\n}\n\nexport default Weather\n","import React, { useState } from 'react'\nimport { Nav, Navbar } from 'react-bootstrap'\n\nconst NavigationBar = () => {\n  const [expanded, setExpanded] = useState(false)\n  return (\n    <div>\n      <Navbar expand=\"lg\" fixed=\"top\" variant=\"dark\" expanded={expanded}>\n        <Navbar.Brand href=\"#/\">Bikester</Navbar.Brand>\n        <Navbar.Toggle\n          area-controls=\"basic-navbar-nav\"\n          onClick={() => setExpanded(expanded ? false : 'expanded')}\n        />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link href=\"#/\" onClick={() => setExpanded(false)}>\n              Home\n            </Nav.Link>\n            <Nav.Link href=\"#/maps\" onClick={() => setExpanded(false)}>\n              Maps\n            </Nav.Link>\n            <Nav.Link href=\"#/weather\" onClick={() => setExpanded(false)}>\n              Weather\n            </Nav.Link>\n            <Nav.Link\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://benjambo.github.io/portfolio/#/\"\n              onClick={() => setExpanded(false)}\n            >\n              About Me\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  )\n}\nexport default NavigationBar\n","import { MapLayer } from 'react-leaflet'\nimport L from 'leaflet'\nimport 'leaflet-routing-machine'\nimport { withLeaflet } from 'react-leaflet'\n\nclass Routing extends MapLayer {\n  createLeafletElement() {\n    const { map } = this.props\n    let leafletElement = L.Routing.control({\n      waypoints: [L.latLng(60.176123, 24.946), L.latLng(60.174325, 24.952123)],\n    }).addTo(map.leafletElement)\n    return leafletElement.getPlan()\n  }\n}\nexport default withLeaflet(Routing)\n","import React from 'react'\nimport { Map, TileLayer } from 'react-leaflet'\nimport Routing from './Routing'\n\nclass MapComponent extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      isMapInit: false,\n    }\n  }\n\n  saveMap = (map) => {\n    this.map = map\n    this.setState({\n      isMapInit: true,\n    })\n  }\n\n  render() {\n    const { lat, lng, zoom } = this.state\n    const position = [lat, lng]\n\n    return (\n      <div className=\"pages\">\n        <div className=\"map-container\">\n          <Map center={position} zoom={zoom} ref={this.saveMap}>\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            {this.state.isMapInit && <Routing map={this.map} />}\n          </Map>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MapComponent\n","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css'\n\n// Pages\nimport { Bikes } from './pages/bikes'\nimport { Home } from './pages/home'\nimport { Mapper } from './pages/map'\nimport { Weather } from './pages/weather'\n\n// Components\nimport NavigationBar from './components/NavigationBar'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport LeafletMap from './components/LeafletMap'\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavigationBar />\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/bikes\" component={Bikes} />\n            <Route path=\"/maps\" component={Mapper} />\n            <Route path=\"/weather\" component={Weather} />\n            <Route path=\"/leaflet\" component={LeafletMap} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}